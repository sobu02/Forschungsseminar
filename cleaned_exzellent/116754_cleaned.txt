Ackermannfunktion Ackermannfunktion Wilhelm Ackermann gefundene extrem schnell wachsende mathematische Funktion Hilfe theoretischen Informatik Grenzen Berechnungsmodellen ganze Reihe Funktionen Ackermannfunktion ähnliches Bildungsgesetz ursprüngliche Ackermannfunktion ähnliches Wachstumsverhalten Entstehungsgeschichte David Hilbert berechenbare Funktion primitiv-rekursiv Vereinfacht Computer berechenbare Funktion einfachen Regeln Dauer Berechnung Voraus Praxis vorkommenden Funktionen Ackermann Funktion Vermutung Ehren Funktion Ackermannfunktion Computer endlicher Zeit primitiv-rekursiv Rózsa Péter vereinfachte Version gleichen Eigenschaften Funktion gelegentlich Ackermann-Péter-Funktion vorwiegend Idee Folge a\cdot \ldots Folgenglied Operation vorigen Folgenglieds a a\cdot Variable b-mal Idee Ackermannfunktion Folge Funktion Beispiel obiger Folge Folge \underbrace \ldots Ackermannfunktion letztgenannte Zahl weit Vorstellbaren Ackermannfunktion \varphi Funktion folgenden Gleichungen \varphi \varphi \varphi vierten Zeile Funktionswerte herkömmlichen Operatoren erweiterte Notationen Hyper-Operator Definition Varianten Ackermannfunktion rekursiv Anfangswerte explizite Angaben Anleitung Rekursionsschema weitere Funktionswerte berechneten Definition Ackermann Ackermann Funktion recht umständliche Weise kurz folgende äquivalente Definition \varphi \varphi a =\alpha \varphi =\varphi a \varphi \alpha\left weitere Funktion Ackermann Startwerte a\cdot \alpha Beispiele \varphi erste Zeile Definition direkt \varphi 7. \varphi zweite Zeile \varphi \alpha 1. zweite dritte Argument dritte Zeile Definition \varphi =\varphi \varphi \varphi vorigen Beispiel \varphi dritte Zeile zweite \varphi =\varphi \varphi =\varphi =\varphi \varphi =\varphi Wachstum Ackermannfunktion Funktion \varphi Definition einfachere Version Ackermannfunktion Parameter Hilfsfunktion \alpha Konstruktion nichtrekursiver Funktionen Mathematische Annalen S Zusammenhang Wachstumsuntersuchungen Funktion \operatorname Ackermannfunktion Definition ersichtlich Funktion \operatorname negativen m einen \operatorname \cdot anderen Voraussetzung \cdot \cdot letzten Rekursionsvorschriften iterativ Verringerung obere Schranke Wachstum m folgenden Funktionsaufrufen Modifizierte Ackermannfunktion Häufig Komplexitätsanalyse leicht modifizierte Versionen Ackermannfunktion gleiche asymptotische Laufzeitverhalten Varianten Interpretation P. K. Agarwal M. Sharir Davenport-Schinzel In Handbook S A_k definierte Folge Funktionen A_k Definition modifizierten Ackermannfunktion A A Funktionen A_k natürliche Fortsetzung Addition Multiplikation Potenzierung A_1 n-fache Addition Zahl A_2 n-fache Multiplikation Zahl 2\cdot k A_2 A_3 Bedeutung theoretischen Informatik Ackermann Funktion Beispiel Funktion primitiv-rekursiv berechenbar Suche Grenzen Computern schnell Begriff berechenbaren Funktionen Funktionen Auswertung Algorithmus Funktionen Computer Turingmaschine Definition schnell Problem konkreten Funktion berechenbar Algorithmus Funktion offensichtlich berechenbar ungewiss Funktion wirklich berechenbar Algorithmus Grund alternativen Definitionen Nachweis einfacher erster Ansatz primitiv-rekursiven Funktionen Funktionen Regeln einfachen Funktionen Zeit berechenbaren Funktionen primitiv-rekursiv primitiv-rekursiven Funktionen Werkzeug Lösung geschilderten Problems Hoffnung Ackermannfunktion berechenbar primitiv-rekursiv nachfolgender Beweis Klasse primitiv-rekursiven Funktionen weitere Konstruktionsregel sogenannte µ-Rekursion größere Klasse berechenbarer Funktionen Ackermannfunktion Klasse µ-rekursiven Funktionen Klasse intuitiv berechenbaren Funktionen Church'sche These Beweis Beweis Ackermannfunktion berechenbar primitiv-rekursiv Wesentlichen Ackermannfunktion stärker primitiv-rekursive Funktion.Für Details Beweis z B. Buch Uwe Schöning Literatur Beweisskizze Behauptung Ackermannfunktion primitiv-rekursiv erstes primitiv-rekursiven Funktion g Funktion g Funktion Maximum g Summe Argumente überschreitet strukturelle Induktion induktiven Aufbau primitiv-rekursiven Funktionen primitiv-rekursiven Funktion g natürliche Zahl k sodass Anschaulich Ackermannfunktion stärker rekursive Funktion Ackermannfunktion primitiv-rekursiv primitiv-rekursiv g Vorbemerkung k sodass g Widerspruch g g Anwendungen Ackermannfunktion Anwendungen wichtigsten Benchmarktests rekursive Aufrufe Programmiersprachen Laufzeitabschätzungen gewichteten Vereinigung Pfadkompression Union-Find-Struktur Benchmark rekursive Aufrufe Einführung neuen Programmiersprachen Compilern Computern Leistungsfähigkeit Benchmarking spezielle Programme festgelegte Eigenschaften Zusammenhang Ackermannfunktion Benchmark Überprüfung rekursiven Prozedur-Aufrufen Programm Berechnung Ackermannfunktion Wesentlichen Prozeduraufrufen Definition Péter direkt Schwierigkeit Berechnung Funktionswerte Größe tiefe Verschachtelung Funktionsaufrufe leicht Stapelüberlauf System Speicher Ackermann-Funktion einfache sichere Methode Stapelüberlauf Fehlerfall ggf Ackermann-Funktion Vorteil immun Compiler-Optimierungen statische Quellcode- Analysen möglichen Stapelüberlauf praktisch Idee Funktion diverse Programmiersprachen a a Aufrufe Sundblad groß Computer Lage Zahl Vergleich Java Standardspeichereinstellungen Laufe Berechnung identische Aufrufe mehrfach intelligenter Compiler Ergebnisse Aufrufe Aufrufe durchführbar bedeutenden Zeitvorteil a direkt rekursiv a direkte Berechnung lineare Zeit Berechnung quadratische Zeit c\cdot Konstante c Landau-Symbole verschachtelten Aufrufen verschiedene Berechnung proportionale Zeit Laufzeitabschätzungen Umkehrfunktion Funktion schnell Umkehrfunktion langsam praktisch vorstellbare Eingabegröße kleiner Funktionswert größer Anzahl Atome Universum Berechnung praktischen Analyse Algorithmen konstant Umkehrfunktion Laufzeitanalyse bestimmter Algorithmen Beispiel Union-Find-Problem Chazelles Algorithmus minimale Spannbäume anderen Zusammenhängen ursprüngliche Ackermannfunktion Weglassen additiver Konstanten andere Modifikationen leicht Funktion ähnlichem asymptotischen Verhalten modifizierten Funktionen Ackermannfunktion Maßstäben Laufzeitanalyse äquivalent rekursive Implementierung Ackermannfunktion Pseudocode direkt Definition return else return else return effizienter folgende iterative Implementierung while else m return effizientere Implementierungen Arrays Zwischenspeicherung berechneter Werte Dynamische Programmierung Grossman Zeitman Algorithmus \operatorname Zwischenspeicherung Laufzeit \operatorname Speicherbedarf Haskell funktionalen Programmiersprache Implementierung direkt Definition Prolog Implementierung ackermann Y Y 1. ackermann X,0 Z ackermann Z ackermann Y Z Y X-1 Y ackermann ackermann X1 W Z Lambda-Kalkül rein iterative Implementierung möglich succ Numerale Darstellung natürlichen Zahlen Gleichungen Definition Péter direkt β-Konversion Wertetabelle folgende Tabelle Funktionswerte kleine Werte m. vollständig ausgerechneten Werte groß Werte 8\cdot \cdot Zahl Dezimalstellen matrix matrix Potenzturm Zahlen unvorstellbar großen Zahlen Tabelle rekursive Verfahren schneller wachsende Werte Beispiel Grahams Zahl Benötigter Speicher integer bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit KiB bit bit bit bit bit Byte bit Byte bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit bit Byte bit bit Byte bit KB bit bit KB bit bit MB bit bit MB bit bit MiB bit bit EiB bit Genauere Betrachtung Wertetabelle Schema Berechnung Funktionswerte leichter formale rekursive Definition leicht Werte ersten Zeile Liste natürlichen Zahlen jeweiligen Einträge Formel folgenden Zeilen Anweisungen Zeile Wert Falle Zeile Anweisung Wert Zeile Vereinfachung schwieriger Beispiel komplexeren Fall a ersten Funktionswert groß praktisch Zeit einfachste Fall Expansion Tabelle offensichtlich Funktionswerte selten direkt interessant Schritte nötig einfach aussehende Ackermann-Ausdrücke Zeile vorigen Beispiel einzige Anwendung Teile Definition Ackermannfunktion Stelle logische Schritte nächste Funktionsaufruf Zahl weit geschätzte Anzahl Atome Universum Zahl Berechnung Ausdruck Form Mitteln weiterer interessanter Aspekt Funktion einzige Berechnung rekursiven Aufrufen tatsächlich Berechnung m Literatur Dexter C. Kozen Design Springer Berlin Uwe Schöning Theoretische Informatik Spektrum Akademischer Verlag Heidelberg The Ackermann Function Formula BIT Springer Dordrecht S Erklärungsvideo Ackermannfunktion englisch Kategorie Berechenbarkeitstheorie Kategorie Mathematische Funktion